# This docker-compose file intents to create a multi-container application
# that runs a Jenkins container connected via TLS to a Docker-in-Docker (dind) container as Docker daemon.
#
# It uses an expanded entrypoint that first installs the docker-workflow plugin before starting Jenkins.
#
# Quick reference about Docker-in-Docker can be found at:
# https://hub.docker.com/_/docker
#
# Main source: https://www.jenkins.io/doc/tutorials/create-a-pipeline-in-blue-ocean/

version: "3.9"
services:
  jenkins:
    container_name: jenkins
    user: jenkins
    privileged: true
    image: bobbybabu007/jenkins-nonprod:4.0.0
#    jenkins/jenkins:lts-jdk11
#    entrypoint: ["jenkins-plugin-cli", "--plugins", "docker-workflow", "&&", "/sbin/tini", "--", "/usr/local/bin/jenkins.sh"]
    ports:
      - 8080:8080
      - 50000:50000
    networks:
      - jenkins
    environment:
      - TZ=America/New_York    
      - DOCKER_HOST=tcp://docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Dhudson.model.DirectoryBrowserSupport.CSP=""
    volumes:
      - $HOME\code\jenkins-docker\volume:/var/jenkins_home
      - jenkins-docker-certs:/certs/client
  # dind:
  #   container_name: docker
  #   image: docker:dind
  #   privileged: true
  #   ports:
  #     - 2376:2376
  #   networks:
  #     jenkins:
  #       aliases:
  #         - docker
  #   environment:
  #     - DOCKER_TLS_CERTDIR=/certs
  #   volumes:
  #     - jenkins-docker-certs:/certs/client
  # nexus:
  #   container_name: nexus
  #   image: sonatype/nexus3
  #   privileged: true
  #   ports:
  #     - 8081:8081
  #   networks:
  #     jenkins:
  #       aliases:
  #         - docker
  #   environment:
  #     - NEXUS_ADMIN=bobby
  #   volumes:
  #     - $HOME\code\jenkins-docker\nexus-volume:/nexus-data
  # sonarqube:
  #   image: sonarqube
  #   restart: unless-stopped
  #   environment:
  #     - SONARQUBE_JDBC_USERNAME=sonarqube
  #     - SONARQUBE_JDBC_PASSWORD=sonarpass
  #     - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonarqube
  #   ports:
  #     - "9000:9000"
  #     - "9092:9092"
  #   volumes:
  #     - sonarqube_conf:/opt/sonarqube/conf
  #     - sonarqube_data:/opt/sonarqube/data
  #     - sonarqube_extensions:/opt/sonarqube/extensions
  #     - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
  # db:
  #   image: postgres
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_USER=sonarqube
  #     - POSTGRES_PASSWORD=sonarpass
  #     - POSTGRES_DB=sonarqube
  #   volumes:
  #     - sonarqube_db:/var/lib/postgresql
  #     - postgresql_data:/var/lib/postgresql/data

volumes:
  jenkins-docker-certs:
  jenkins-data:
  # nexus-data:
  # postgresql_data:
  # sonarqube_bundled-plugins:
  # sonarqube_conf:
  # sonarqube_data:
  # sonarqube_db:
  # sonarqube_extensions:

networks:
  jenkins:
